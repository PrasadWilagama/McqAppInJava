import java.awt.GraphicsConfiguration;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

//import com.sun.tools.sjavac.comp.dependencies.PublicApiCollector;

class Test extends JFrame implements ActionListener{
	private static final String Public = null;
	private static GraphicsConfiguration s;
	JLabel label;
	JRadioButton radioButton[] = new JRadioButton[5];
	JButton btnNext, btnBookmark;
	ButtonGroup bg;
	int count = 0 , current = 0, x=1, y=1, now=0;
	int m[] = new int[10];
	
	Test(String string) {
		super(s);
		label = new JLabel();
		add(label);
		bg = new ButtonGroup();
		for(int i =0;i<5;i++) {
			radioButton[i] = new JRadioButton();
			add(radioButton[i]);
			bg.add(radioButton[i]);
		}
		
		btnNext = new JButton("Next");
		btnBookmark = new JButton("Bookmark");
		btnNext.addActionListener(this);
		btnBookmark.addActionListener(this);
		add(btnNext);
		add(btnBookmark);
		set();
		label.setBounds(30,40,450,20);
		radioButton[0].setBounds(30,80,1500,15);
		radioButton[1].setBounds(30,110,1500,15);
		radioButton[2].setBounds(30,140,1500,15);
		radioButton[3].setBounds(30,170,1500,15);
		btnNext.setBounds(100,240,100,30);
		btnBookmark.setBounds(270,240,100,30);
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setLayout(null);
		setLocation(250,100);
		setVisible(true);
		setSize(600, 350);	
	}
	
	  void set() {
		// TODO Auto-generated method stub
		  radioButton[4].setSelected(true);
		  if(current == 0) {
			  label.setText("01.Which of the following option leads to the portability and security of Java?");
			  radioButton[0].setText("Bytecode is executed by JVM");
			  radioButton[1].setText("The applet makes the Java code secure and portable");
			  radioButton[2].setText("Use of exception handling");
			  radioButton[3].setText("Dynamic binding between objects");
			  }
		  if(current == 1) {
			  label.setText("02.Which of the following is not a Java features?");
			  radioButton[0].setText("Dynamic");
			  radioButton[1].setText("Use of pointers");
			  radioButton[2].setText("Object-oriented");
			  radioButton[3].setText("Architecture Neutral");
			  }
		  if(current == 2) {
			  label.setText("03.The \\u0021 article referred to as a ");
			  radioButton[0].setText("Line feed");
			  radioButton[1].setText("Octal escape");
			  radioButton[2].setText("Unicode escape sequence");
			  radioButton[3].setText("Hexadecimal");
			  }
		  if(current == 3) {
			  label.setText("04.___ is used to find and fix bugs in the Java programs.");
			  radioButton[0].setText("JVM");
			  radioButton[1].setText("JRE");
			  radioButton[2].setText("JDK");
			  radioButton[3].setText("JDB");
			  }
		  if(current == 4) {
			  label.setText("05.Which of the following is a valid declaration of a char?");
			  radioButton[0].setText("char ch = '\\utea';");
			  radioButton[1].setText("char ca = 'tea';");
			  radioButton[2].setText("char cr = \\u0223;");
			  radioButton[3].setText("char cc = '\\itea';");
			  }
		  if(current == 5) {
			  label.setText("06.What is the return type of the hashCode() method in the Object class?");
			  radioButton[0].setText("long");
			  radioButton[1].setText("int");
			  radioButton[2].setText("void");
			  radioButton[3].setText("Object");
			  }
		  if(current == 6) {
			  label.setText("07.Which of the following is a valid long literal?");
			  radioButton[0].setText("904423");
			  radioButton[1].setText("L990023");
			  radioButton[2].setText("0xnf029L");
			  radioButton[3].setText("ABH8097");
			  }
		  if(current == 7) {
			  label.setText("08.What does the expression float a = 35 / 0 return?");
			  radioButton[0].setText("Not a Number");
			  radioButton[1].setText("0");
			  radioButton[2].setText("Run Time exception");
			  radioButton[3].setText("Infinity");
			  }
		  if(current == 8) {
			  label.setText("09.Which of the following for loop declaration is not valid?");
			  radioButton[0].setText("for ( int i = 99; i >= 0; i / 9 )");
			  radioButton[1].setText("for ( int i = 7; i <= 77; i += 7 )");
			  radioButton[2].setText("for ( int i = 20; i >= 2; - -i )");
			  radioButton[3].setText("for ( int i = 2; i <= 20; i = 2* i )");
			  }
		  if(current == 9) {
			  label.setText("10.Which of the following is true about the anonymous inner class?");
			  radioButton[0].setText("It has only methods");
			  radioButton[1].setText("It has no class name");
			  radioButton[2].setText("Objects can't be created");
			  radioButton[3].setText("It has a fixed class name");
			  }
		      
		  label.setBounds(30,40,450,20);
		  for(int i=0, j=0; i<=90; i+=30,j++)
			   radioButton[j].setBounds(50,80+i,200,20);
		}
	  
	  boolean check() {
		  if (current ==0)
			  return(radioButton[0].isSelected());
		  if (current ==1)
			  return(radioButton[1].isSelected());
		  if (current ==2)
			  return(radioButton[2].isSelected());
		  if (current ==3)
			  return(radioButton[3].isSelected());
		  if (current ==4)
			  return(radioButton[0].isSelected());
		  if (current ==5)
			  return(radioButton[1].isSelected());
		  if (current ==6)
			  return(radioButton[2].isSelected());
		  if (current ==7)
			  return(radioButton[3].isSelected());
		  if (current ==8)
			  return(radioButton[0].isSelected());
		  if (current ==9)
			  return(radioButton[1].isSelected());
		  if (current ==10)
			  return(radioButton[2].isSelected());
		  return false;
	  }
	  
	@Override
	public void actionPerformed(ActionEvent e) {
		if (e.getSource() == btnNext) {
			if (check())
				count = count + 1;
			current++;
			set();
			if (current == 9) {
				btnNext.setEnabled(false);
				btnBookmark.setText("Result");
			}
		}
		if (e.getActionCommand().equals("Bookmark")) {
			JButton bk = new JButton("Bookmark" + x);
			bk.setBounds(480, 20 + 30 * x, 100, 30);
			add(bk);
			bk.addActionListener(this);
			m[x] = current;
			x++;
			current++;
			set();
			if (current == 9)
				btnBookmark.setText("Result");
			setVisible(false);
			setVisible(true);
		}
		for (int i = 0, y = 1; i < x; i++, y++) {
			if (e.getActionCommand().equals("Bookmark" + y)) {
				if (check())
					count = count + 1;
				now = current;
				current = m[y];
				set();
				((JButton) e.getSource()).setEnabled(false);
				current = now;
			}
		}

		if (e.getActionCommand().equals("Result")) {
			if (check())
				count = count + 1;
			current++;
			JOptionPane.showMessageDialog(this, "correct answers= " + count);
			System.exit(0);
		}
	}

	
	public static void main(String[]args){
         new Test("Online Test App");
         System.out.println("Prasad D Wilagama");
		
	} 	
   
}
